program ::= "$" decllist "." stmtlist "$"

decllist ::= declaration | declaration "." decllist

declaration ::= type IDENTIFIER

type1 ::= "integer" | "char" | "bool" | "string"

arraydeclaration ::= type1 IDENTIFIER "{" nr "}"

type ::= type1 | arraydecl

stmtlist ::= stmt | stmt "." stmtlist

stmt ::= simplestmt | structstmt

simplestmt ::= assignstmt "."| iostmt "."

assignstmt ::= IDENTIFIER ":=" expression

iostmt ::= "READ" "[" IDENTIFIER"]" | "WRITE" "[" IDENTIFIER "]"

expression = term | expression "+" term | expression "-" term

term ::= term "*" factor | term "/" factor | term "mod" factor | factor

factor ::= "[" expression "]" | IDENTIFIER | CONST

structstmt ::= stmtlist | ifstmt | duringstmt | loopstmt

ifstmt ::= "if" "[" conditionstmt "]" ":" stmtlist [ "else" ":" stmtlist]

duringstmt ::= "during" "[" conditionstmt "]" ":" stmtlist

loopstmt ::= "loop" loopcond ":" stmtlist

loopcond ::= "[" assignstmt "," conditionstmt "," assignstmt "]"

condition ::= expression RELATION expression

conditionstmt ::= condition { "|" condition | "&" condition }

RELATION ::= "<" | ">" | "<=" | ">=" | "=" | "!="